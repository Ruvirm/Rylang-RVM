#ifndef BYTECODE_H
#define BYTECODE_H

typedef enum {
    PUSH,    // Поместить значение в стек
    ADD,     // Сложение
    SUB,     // Вычитание
    MUL,     // Умножение
    DIV,     // Деление
    MOD,     // Остаток от деления
    PRINT,   // Печать верхнего значения стека
    DUP,     // Дублирование верхнего значения стека
    DUPN,    // Дублирование элемента на N позиций ниже вершины
    SWAP,    // Обмен двух верхних значений
    OVER,    // Копирование предпоследнего элемента на вершину
    DROP,    // Удаление верхнего элемента стека
    AND,     // Побитовое И
    OR,      // Побитовое ИЛИ
    NOT,     // Побитовое НЕ
    LT,      // Сравнение (меньше)
    GT,      // Сравнение (больше)
    EQ,      // Сравнение (равно)
    GOTO,    // Безусловный переход
    IFZERO,  // Переход, если верхнее значение стека равно нулю
    IFPOS,   // Переход, если верхнее значение стека положительное
    IFNEG,   // Переход, если верхнее значение стека отрицательное
    HALT     // Завершение программы
} OpCode;

typedef struct {
    int stack[256];    // Стек
    int sp;            // Указатель стека
} VM;

void initVM(VM *vm);
void push(VM *vm, int value);
int pop(VM *vm);
void run(VM *vm, int *code);

#endif // BYTECODE_H
